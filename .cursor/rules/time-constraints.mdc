---
alwaysApply: true
description: 2시간 개발 제약 조건하에서의 개발 전략
---

# 2시간 개발 제약 조건 가이드

## 시간 배분 계획
- **30분**: 기본 구조 및 HTML/CSS 셋업
- **60분**: 핵심 게임 로직 구현 (비행기, 장애물, 충돌)
- **20분**: 점수 시스템 및 게임 상태 관리
- **10분**: 테스트 및 버그 수정

## 개발 우선순위 (MVP 먼저)
1. **1순위 (필수)**: 
   - 기본 비행기 움직임
   - 장애물 생성 및 이동
   - 충돌 감지
   - 점수 표시
   
2. **2순위 (시간이 남으면)**:
   - 게임 오버 화면
   - 재시작 기능
   - 간단한 효과음
   
3. **3순위 (보너스)**:
   - 시각적 효과
   - 최고 점수 저장
   - 애니메이션

## 빠른 개발을 위한 규칙
- **라이브러리 사용 금지**: Vanilla JS만 사용하여 셋업 시간 단축
- **복잡한 그래픽 금지**: 간단한 도형(사각형, 원)으로만 구성
- **디버깅 최소화**: console.log 적극 활용
- **완벽함보다 동작**: 일단 작동하는 것을 만들고 나중에 개선

## 시간 절약 팁
- Canvas 기본 도형 API 활용 (rect, arc)
- 하드코딩된 값 사용 (상수로 나중에 정리)
- 간단한 상태 머신으로 게임 흐름 관리
- 에러 핸들링은 최소한으로

## 코드 재사용성
- 공통 유틸리티 함수 미리 작성
- 객체 풀링 대신 간단한 배열 관리
- 설정값들을 상단에 상수로 모아두기